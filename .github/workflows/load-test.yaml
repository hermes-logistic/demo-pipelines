name: 'Load Testing'

on:
  workflow_call:
    secrets:
      WORKLOAD_IDENTITY_PROVIDER:
        required: true
      SERVICE_ACCOUNT:
        required: true
      GOOGLE_CHAT_WEBHOOK_URL:
        required: true
      SERVICE_NAME:
        required: true
      
jobs:
  create-cr:
    environment: development
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: code checkout
        uses: actions/checkout@v2

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Read variable from file
        run: |
          URL=$(gcloud run services describe ${{ secrets.SERVICE_NAME }}-${{ github.event.pull_request.number }} --region us-east4 --format "value(status.url)")
          echo "URL=${URL}" >> $GITHUB_ENV
      
      - name: Update ddosify json
        run: |
          sed -i.bak "s|URL|$URL|g" ddosify-data.json

      - name: Run load tests
        run: |
          wget https://github.com/ddosify/ddosify/releases/download/v1.0.6/ddosify_amd64.deb
          sudo dpkg -i ddosify_amd64.deb
          export LOAD_RESULTS=$(ddosify -config ddosify-data.json)
          echo $LOAD_RESULTS > load-testing-results-${{ github.run_id }}-${{ github.run_number }}.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: QA Results_${{ github.run_id }}-${{ github.run_number }}
          path: load-testing-results-${{ github.run_id }}-${{ github.run_number }}.txt

      - name: Notify Google Chat
        if: ${{ always() }}
        uses: SimonScholz/google-chat-action@main
        with:
          webhookUrl: '${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}'
          jobStatus: ${{ job.status }}
          title: 'Load Testing'
          subtitle: ${{ github.event.pull_request.head.ref }}